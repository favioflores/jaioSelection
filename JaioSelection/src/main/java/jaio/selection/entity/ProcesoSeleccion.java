package jaio.selection.entity;
// Generated 27/10/2017 01:28:59 AM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProcesoSeleccion generated by hbm2java
 */
@Entity
@Table(name = "proceso_seleccion", catalog = "jaioselectiondb")
public class ProcesoSeleccion implements java.io.Serializable {

	private Integer id;
	private Perfil perfil;
	private Date fechaRegistro;
	private String descripcion;
	private int estado;
	private Set<Candidato> candidatos = new HashSet<Candidato>(0);
	private Set<ComunicadoProceso> comunicadoProcesos = new HashSet<ComunicadoProceso>(0);
	private Set<Notificaciones> notificacioneses = new HashSet<Notificaciones>(0);

	public ProcesoSeleccion() {
	}

	public ProcesoSeleccion(Perfil perfil, Date fechaRegistro, String descripcion, int estado) {
		this.perfil = perfil;
		this.fechaRegistro = fechaRegistro;
		this.descripcion = descripcion;
		this.estado = estado;
	}

	public ProcesoSeleccion(Perfil perfil, Date fechaRegistro, String descripcion, int estado,
			Set<Candidato> candidatos, Set<ComunicadoProceso> comunicadoProcesos,
			Set<Notificaciones> notificacioneses) {
		this.perfil = perfil;
		this.fechaRegistro = fechaRegistro;
		this.descripcion = descripcion;
		this.estado = estado;
		this.candidatos = candidatos;
		this.comunicadoProcesos = comunicadoProcesos;
		this.notificacioneses = notificacioneses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "perfil_id", nullable = false)
	public Perfil getPerfil() {
		return this.perfil;
	}

	public void setPerfil(Perfil perfil) {
		this.perfil = perfil;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_registro", nullable = false, length = 10)
	public Date getFechaRegistro() {
		return this.fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		this.fechaRegistro = fechaRegistro;
	}

	@Column(name = "descripcion", nullable = false, length = 200)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "estado", nullable = false)
	public int getEstado() {
		return this.estado;
	}

	public void setEstado(int estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procesoSeleccion")
	public Set<Candidato> getCandidatos() {
		return this.candidatos;
	}

	public void setCandidatos(Set<Candidato> candidatos) {
		this.candidatos = candidatos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procesoSeleccion")
	public Set<ComunicadoProceso> getComunicadoProcesos() {
		return this.comunicadoProcesos;
	}

	public void setComunicadoProcesos(Set<ComunicadoProceso> comunicadoProcesos) {
		this.comunicadoProcesos = comunicadoProcesos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "procesoSeleccion")
	public Set<Notificaciones> getNotificacioneses() {
		return this.notificacioneses;
	}

	public void setNotificacioneses(Set<Notificaciones> notificacioneses) {
		this.notificacioneses = notificacioneses;
	}

}
